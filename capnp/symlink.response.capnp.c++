// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: symlink.response.capnp

#include "symlink.response.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_b2fd7c76c88911ff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255,  17, 137, 200, 118, 124, 253, 178,
     23,   0,   0,   0,   1,   0,   1,   0,
    108, 123, 124,  60, 149, 228, 134, 235,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 121, 109, 108, 105, 110, 107,  46,
    114, 101, 115, 112, 111, 110, 115, 101,
     46,  99,  97, 112, 110, 112,  58,  83,
    121, 109, 108, 105, 110, 107,  82, 101,
    115, 112, 111, 110, 115, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 110, 111,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b2fd7c76c88911ff = b_b2fd7c76c88911ff.words;
#if !CAPNP_LITE
static const uint16_t m_b2fd7c76c88911ff[] = {1, 0};
static const uint16_t i_b2fd7c76c88911ff[] = {0, 1};
const ::capnp::_::RawSchema s_b2fd7c76c88911ff = {
  0xb2fd7c76c88911ff, b_b2fd7c76c88911ff.words, 49, nullptr, m_b2fd7c76c88911ff,
  0, 2, i_b2fd7c76c88911ff, nullptr, nullptr, { &s_b2fd7c76c88911ff, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// SymlinkResponse
constexpr uint16_t SymlinkResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t SymlinkResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SymlinkResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SymlinkResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



