// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: unlink.capnp

#include "unlink.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_9f635e64d70ff582 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130, 245,  15, 215, 100,  94,  99, 159,
     13,   0,   0,   0,   1,   0,   1,   0,
      1, 180, 212,  43, 167,  58, 120, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 108, 105, 110, 107,  46,  99,
     97, 112, 110, 112,  58,  85, 110, 108,
    105, 110, 107,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114, 101, 110, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f635e64d70ff582 = b_9f635e64d70ff582.words;
#if !CAPNP_LITE
static const uint16_t m_9f635e64d70ff582[] = {1, 0};
static const uint16_t i_9f635e64d70ff582[] = {0, 1};
const ::capnp::_::RawSchema s_9f635e64d70ff582 = {
  0x9f635e64d70ff582, b_9f635e64d70ff582.words, 47, nullptr, m_9f635e64d70ff582,
  0, 2, i_9f635e64d70ff582, nullptr, nullptr, { &s_9f635e64d70ff582, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Unlink
constexpr uint16_t Unlink::_capnpPrivate::dataWordSize;
constexpr uint16_t Unlink::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Unlink::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unlink::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



