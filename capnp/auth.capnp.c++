// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: auth.capnp

#include "auth.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_c9c26d9ee78c4f69 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    105,  79, 140, 231, 158, 109, 194, 201,
     17,   0,   0,   0,   1,   0,   0,   0,
    187,  37,  17,  84,  34,  60,  79, 238,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  97, 117,
    116, 104,  46,  99,  97, 112, 110, 112,
     58,  65, 117, 116, 104,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    117, 115, 101, 114,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c9c26d9ee78c4f69 = b_c9c26d9ee78c4f69.words;
#if !CAPNP_LITE
static const uint16_t m_c9c26d9ee78c4f69[] = {1, 0};
static const uint16_t i_c9c26d9ee78c4f69[] = {0, 1};
const ::capnp::_::RawSchema s_c9c26d9ee78c4f69 = {
  0xc9c26d9ee78c4f69, b_c9c26d9ee78c4f69.words, 47, nullptr, m_c9c26d9ee78c4f69,
  0, 2, i_c9c26d9ee78c4f69, nullptr, nullptr, { &s_c9c26d9ee78c4f69, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Auth
constexpr uint16_t Auth::_capnpPrivate::dataWordSize;
constexpr uint16_t Auth::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Auth::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Auth::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



