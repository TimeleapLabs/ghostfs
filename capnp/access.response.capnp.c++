// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: access.response.capnp

#include "access.response.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_9028730c99b68f48 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     72, 143, 182, 153,  12, 115,  40, 144,
     22,   0,   0,   0,   1,   0,   1,   0,
    194,  79, 211,  17,  17, 135, 235, 242,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 115, 115,  46, 114,
    101, 115, 112, 111, 110, 115, 101,  46,
     99,  97, 112, 110, 112,  58,  65,  99,
     99, 101, 115, 115,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 110, 111,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9028730c99b68f48 = b_9028730c99b68f48.words;
#if !CAPNP_LITE
static const uint16_t m_9028730c99b68f48[] = {1, 0};
static const uint16_t i_9028730c99b68f48[] = {0, 1};
const ::capnp::_::RawSchema s_9028730c99b68f48 = {
  0x9028730c99b68f48, b_9028730c99b68f48.words, 49, nullptr, m_9028730c99b68f48,
  0, 2, i_9028730c99b68f48, nullptr, nullptr, { &s_9028730c99b68f48, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// AccessResponse
constexpr uint16_t AccessResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t AccessResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AccessResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AccessResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



