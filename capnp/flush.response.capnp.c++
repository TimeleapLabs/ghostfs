// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: flush.response.capnp

#include "flush.response.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_adb22d53fd152bc2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194,  43,  21, 253,  83,  45, 178, 173,
     21,   0,   0,   0,   1,   0,   1,   0,
    156, 241, 251,  27, 190, 126, 149, 144,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 117, 115, 104,  46, 114, 101,
    115, 112, 111, 110, 115, 101,  46,  99,
     97, 112, 110, 112,  58,  70, 108, 117,
    115, 104,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 110, 111,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adb22d53fd152bc2 = b_adb22d53fd152bc2.words;
#if !CAPNP_LITE
static const uint16_t m_adb22d53fd152bc2[] = {1, 0};
static const uint16_t i_adb22d53fd152bc2[] = {0, 1};
const ::capnp::_::RawSchema s_adb22d53fd152bc2 = {
  0xadb22d53fd152bc2, b_adb22d53fd152bc2.words, 49, nullptr, m_adb22d53fd152bc2,
  0, 2, i_adb22d53fd152bc2, nullptr, nullptr, { &s_adb22d53fd152bc2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// FlushResponse
constexpr uint16_t FlushResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t FlushResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FlushResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FlushResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



