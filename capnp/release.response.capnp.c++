// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: release.response.capnp

#include "release.response.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<50> b_abbe03b26f45b319 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 179,  69, 111, 178,   3, 190, 171,
     29,   0,   0,   0,   1,   0,   1,   0,
     60, 117, 240,  85, 236, 211, 168, 204,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 114, 101,
    108, 101,  97, 115, 101,  46, 114, 101,
    115, 112, 111, 110, 115, 101,  46,  99,
     97, 112, 110, 112,  58,  82, 101, 108,
    101,  97, 115, 101,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 110, 111,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_abbe03b26f45b319 = b_abbe03b26f45b319.words;
#if !CAPNP_LITE
static const uint16_t m_abbe03b26f45b319[] = {1, 0};
static const uint16_t i_abbe03b26f45b319[] = {0, 1};
const ::capnp::_::RawSchema s_abbe03b26f45b319 = {
  0xabbe03b26f45b319, b_abbe03b26f45b319.words, 50, nullptr, m_abbe03b26f45b319,
  0, 2, i_abbe03b26f45b319, nullptr, nullptr, { &s_abbe03b26f45b319, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ReleaseResponse
constexpr uint16_t ReleaseResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ReleaseResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ReleaseResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ReleaseResponse::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



