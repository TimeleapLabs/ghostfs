// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: lookup.capnp

#include "lookup.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_99b133a2cb22d7d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 215,  34, 203, 162,  51, 177, 153,
     19,   0,   0,   0,   1,   0,   1,   0,
    178,  56, 119, 127, 101, 122, 135, 176,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47, 108, 111,
    111, 107, 117, 112,  46,  99,  97, 112,
    110, 112,  58,  76, 111, 111, 107, 117,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114, 101, 110, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_99b133a2cb22d7d1 = b_99b133a2cb22d7d1.words;
#if !CAPNP_LITE
static const uint16_t m_99b133a2cb22d7d1[] = {1, 0};
static const uint16_t i_99b133a2cb22d7d1[] = {0, 1};
const ::capnp::_::RawSchema s_99b133a2cb22d7d1 = {
  0x99b133a2cb22d7d1, b_99b133a2cb22d7d1.words, 48, nullptr, m_99b133a2cb22d7d1,
  0, 2, i_99b133a2cb22d7d1, nullptr, nullptr, { &s_99b133a2cb22d7d1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Lookup
constexpr uint16_t Lookup::_capnpPrivate::dataWordSize;
constexpr uint16_t Lookup::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Lookup::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Lookup::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



